openapi: 3.0.3
info:
  title: Mechanic API
  description: API for managing mechanics and customers with JWT authentication.
  version: "1.0.0"

servers:
  - url: http://localhost:5000

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login to get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Login successful, returns access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Bad username or password

  /customers:
    get:
      tags:
        - Customers
      summary: Get all customers
      responses:
        '200':
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'

    post:
      tags:
        - Customers
      summary: Create a new customer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInput'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Validation errors
        '401':
          description: Unauthorized

  /customers/{id}:
    get:
      tags:
        - Customers
      summary: Get a customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Customer ID
      responses:
        '200':
          description: Customer data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found

    put:
      tags:
        - Customers
      summary: Update a customer by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Customer ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInput'
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Validation errors
        '401':
          description: Unauthorized
        '404':
          description: Customer not found

    delete:
      tags:
        - Customers
      summary: Delete a customer by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Customer ID
      responses:
        '204':
          description: Customer deleted successfully, no content returned
        '401':
          description: Unauthorized
        '404':
          description: Customer not found

  /mechanics:
    get:
      tags:
        - Mechanics
      summary: Get all mechanics
      responses:
        '200':
          description: List of mechanics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mechanic'

    post:
      tags:
        - Mechanics
      summary: Create a new mechanic
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MechanicInput'
      responses:
        '201':
          description: Mechanic created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mechanic'
        '400':
          description: Validation errors
        '401':
          description: Unauthorized

  /mechanics/{id}:
    get:
      tags:
        - Mechanics
      summary: Get a mechanic by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Mechanic ID
      responses:
        '200':
          description: Mechanic data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mechanic'
        '404':
          description: Mechanic not found

    put:
      tags:
        - Mechanics
      summary: Update a mechanic by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Mechanic ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MechanicInput'
      responses:
        '200':
          description: Mechanic updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mechanic'
        '400':
          description: Validation errors
        '401':
          description: Unauthorized
        '404':
          description: Mechanic not found

    delete:
      tags:
        - Mechanics
      summary: Delete a mechanic by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Mechanic ID
      responses:
        '204':
          description: Mechanic deleted successfully, no content returned
        '401':
          description: Unauthorized
        '404':
          description: Mechanic not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: john@example.com
        phone:
          type: string
          example: "123-456-7890"

    CustomerInput:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: john@example.com
        phone:
          type: string
          example: "123-456-7890"

    Mechanic:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Jane Smith
        specialty:
          type: string
          example: Engine Repair
        phone:
          type: string
          example: "987-654-3210"

    MechanicInput:
      type: object
      required:
        - name
        - specialty
      properties:
        name:
          type: string
          example: Jane Smith
        specialty:
          type: string
          example: Engine Repair
        phone:
          type: string
          example: "987-654-3210"
